import { createElement } from "lwc";
import ExternalActionEditor from "c/externalActionEditor";

const windowSpy = jest.spyOn(global, "window", "get");

describe("pi_ea_utils-external-action-editor", () => {
  beforeAll(() => {
    const mockedFromTextArea = jest.fn(() => ({
      getDoc: jest.fn()
    }));
    const originalWindow = { ...window };

    windowSpy.mockImplementation(() => ({
      ...originalWindow,
      CodeMirror: {
        fromTextArea: mockedFromTextArea
      }
    }));
  });
  afterAll(() => {
    windowSpy.mockRestore();
  });
  afterEach(() => {
    // The jsdom instance is shared across test cases in a single file so reset the DOM
    while (document.body.firstChild) {
      document.body.removeChild(document.body.firstChild);
    }
  });

  it("TODO: test case generated by CLI command, please fill in test logic", () => {
    // Arrange
    const element = createElement("pi_ea_utils-external-action-editor", {
      is: ExternalActionEditor
    });

    // Act
    document.body.appendChild(element);

    // Assert
    // const div = element.shadowRoot.querySelector('div');
    expect(1).toBe(1);
  });
});
